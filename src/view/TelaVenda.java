/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import DAO.ClienteDAO;
import DAO.ProdutoDAO;
import DAO.VendasProdutosDAO;
import DTO.ClienteDTO;
import DTO.FornecedorDTO;
import DTO.ProdutoDTO;
import DTO.VendasClienteDTO;
import DTO.VendasDTO;
import DTO.VendasProdutosDTO;
import controller.ControllerCliente;
import controller.ControllerFornecedor;
import controller.ControllerProduto;
import controller.ControllerVendasCliente;
import controller.ControllerVendasProdutos;
import controller.VendasController;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author josia
 */
public class TelaVenda extends javax.swing.JFrame {

    ControllerCliente controllerCliente = new ControllerCliente();
    ControllerProduto controllerProduto = new ControllerProduto();
    ControllerFornecedor controllerfornecedor = new ControllerFornecedor();
    VendasController vendasController = new VendasController();
    ClienteDAO clientedao = new ClienteDAO();
    ProdutoDAO produtodao = new ProdutoDAO();
    ArrayList<ClienteDTO> PesquisarCliente = new ArrayList<>();
    ArrayList<ClienteDTO> PesquisarcampoCliente = new ArrayList<>();
    ArrayList<ProdutoDTO> PesquisarProduto = new ArrayList<>();
    ArrayList<FornecedorDTO> PesquisarFornecedor = new ArrayList<>();
    ArrayList<VendasClienteDTO> listadtovendascliente = new ArrayList<>();
    ProdutoDTO produtodto = new ProdutoDTO();
    ControllerVendasCliente controllerVendasCliente = new ControllerVendasCliente();
    VendasDTO vendasdto = new VendasDTO();
    ControllerVendasProdutos controllerVendasProduto = new ControllerVendasProdutos();
    VendasProdutosDTO vendasProdutodto = new VendasProdutosDTO();
    VendasProdutosDAO vendasProdutosdao = new VendasProdutosDAO();
    ArrayList<VendasProdutosDTO> listaVendasProdutosdto = new ArrayList<>();

    /**
     * Creates new form TelaVenda
     */
    public TelaVenda() {
        initComponents();
        listarClientes();
        listarProdutos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCodigoCliente = new javax.swing.JTextField();
        cbxNomeCliente = new javax.swing.JComboBox<>();
        cbxProduto = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtCodigoProduto = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnAdicionar = new javax.swing.JButton();
        txtDesconto = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtValorTotal = new javax.swing.JTextField();
        btnSair = new javax.swing.JButton();
        btnCancelarProduto = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cbxFormaPagamento = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaVendas = new javax.swing.JTable();
        btnFinalizarVenda = new javax.swing.JButton();
        txtTotalApagar = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(6);

        jPanel2.setBackground(new java.awt.Color(255, 235, 175));

        jLabel5.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        jLabel5.setText("VENDAS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(550, 550, 550)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 235, 175));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("CÓDIGO DO CLIENTE");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel2.setText("NOME DO CLIENTE");

        txtCodigoCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodigoClienteFocusLost(evt);
            }
        });
        txtCodigoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoClienteActionPerformed(evt);
            }
        });

        cbxNomeCliente.setMaximumRowCount(11);
        cbxNomeCliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxNomeClienteItemStateChanged(evt);
            }
        });
        cbxNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxNomeClienteActionPerformed(evt);
            }
        });

        cbxProduto.setMaximumRowCount(1000);
        cbxProduto.setSelectedIndex(-1);
        cbxProduto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxProdutoItemStateChanged(evt);
            }
        });
        cbxProduto.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                cbxProdutoAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        cbxProduto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbxProdutoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cbxProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxProdutoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setText("CÓDIGO DO PRODUTO*");

        txtCodigoProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodigoProdutoFocusLost(evt);
            }
        });
        txtCodigoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoProdutoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("PRODUTO*");

        txtQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQuantidadeKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setText("QUANTIDADE*");

        btnAdicionar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAdicionar.setText("ADICIONAR");
        btnAdicionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAdicionarMouseClicked(evt);
            }
        });
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        txtDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescontoKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel8.setText("DESCONTO");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel9.setText("VALOR TOTAL");

        txtValorTotal.setEditable(false);
        txtValorTotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtValorTotalFocusLost(evt);
            }
        });
        txtValorTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorTotalActionPerformed(evt);
            }
        });

        btnSair.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSair.setText("SAIR");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnCancelarProduto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCancelarProduto.setText("REMOVER PRODUTOS");
        btnCancelarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarProdutoActionPerformed(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/JV - SISTAMASCADAST.png"))); // NOI18N

        jLabel3.setText("Campos Obrigatosrios*");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel12.setText("FORMAS DE PAGAMENTO");

        cbxFormaPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DINHEIRO", "CARTÃO DE BÉBITO", "CARTÃO DE CREDITO", " " }));
        cbxFormaPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxFormaPagamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(33, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(107, 107, 107))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel1)
                                                .addComponent(jLabel4))
                                            .addGap(35, 35, 35))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(txtValorTotal)
                                            .addGap(44, 44, 44))))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbxFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbxNomeCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(cbxProduto, 0, 324, Short.MAX_VALUE))))
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancelarProduto)))
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxFormaPagamento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancelarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23))))
        );

        jPanel3.setBackground(new java.awt.Color(255, 235, 175));

        tabelaVendas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelaVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOME CLIENTE", "NOME DO PRODUTO", "QUANTIDADE", "FORMA PAGAMENTO", "VALOR UN", "VALOR TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabelaVendas);

        btnFinalizarVenda.setBackground(new java.awt.Color(204, 255, 204));
        btnFinalizarVenda.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnFinalizarVenda.setText("FINALIZAR VENDA");
        btnFinalizarVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFinalizarVendaMouseClicked(evt);
            }
        });

        txtTotalApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalApagarActionPerformed(evt);
            }
        });
        txtTotalApagar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTotalApagarKeyReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel11.setText("TOTAL A PAGAR");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnFinalizarVenda)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTotalApagar)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                        .addComponent(btnFinalizarVenda, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        setBounds(0, 0, 1250, 783);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        TelaMenu objtelamenu = new TelaMenu();
        objtelamenu.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void txtCodigoClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoClienteFocusLost

        ClienteDTO cliente = controllerCliente.Pesquisarcampo(Integer.parseInt(txtCodigoCliente.getText()));
        if (cliente != null) {
            cbxNomeCliente.setSelectedItem(cliente.getNome());
        }
    }//GEN-LAST:event_txtCodigoClienteFocusLost

    private void cbxProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxProdutoActionPerformed

    private void cbxNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxNomeClienteActionPerformed
        //  Pesquisarcampocliente();
    }//GEN-LAST:event_cbxNomeClienteActionPerformed

    private void txtCodigoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoClienteActionPerformed

    private void txtCodigoProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoProdutoFocusLost
        /*
        FornecedorDTO prodfornece = controllerfornecedor.pesquisarPorCodigoF(Integer.parseInt(txtCodigoProduto.getText()));
        if (prodfornece!= null) {
            cbxProduto.setSelectedItem(prodfornece.getProduto_fornecedor());
        }
         */
        ProdutoDTO produto = controllerProduto.pesquisarPorCodigo(Integer.parseInt(txtCodigoProduto.getText()));
        if (produto != null) {
            cbxProduto.setSelectedItem(produto.getProduto());
        }
    }//GEN-LAST:event_txtCodigoProdutoFocusLost

    private void cbxNomeClienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxNomeClienteItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            Object item = evt.getItem();
            ClienteDTO dto = PesquisarCliente.stream()
                    .filter(cliente -> cliente.getNome().equalsIgnoreCase(String.valueOf(item)))
                    .findFirst()
                    .orElse(null);
            txtCodigoCliente.setText(String.valueOf(dto.getIdcliente()));
        }
    }//GEN-LAST:event_cbxNomeClienteItemStateChanged

    private ClienteDTO getClienteSelecionado() {
        return PesquisarCliente.stream()
                .filter(p -> p.getNome()
                .equalsIgnoreCase(String.valueOf(cbxNomeCliente.getSelectedItem())))
                .findFirst()
                .orElse(null);
    }

    private ClienteDTO getClienteSelecionado(String nome) {
        return PesquisarCliente.stream()
                .filter(p -> p.getNome()
                .equalsIgnoreCase(String.valueOf(nome)))
                .findFirst()
                .orElse(null);
    }

    private void cbxProdutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxProdutoItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            Object item = evt.getItem();
            ProdutoDTO dto = PesquisarProduto.stream()
                     .filter(produto -> String.valueOf(item).equalsIgnoreCase(produto.getProduto()))
                     .findFirst()
                     .orElse(null);
             txtCodigoProduto.setText(String.valueOf(dto.getId()));
             txtValorTotal.setText(String.valueOf(calcularValorComDesconto()));
        }
    }//GEN-LAST:event_cbxProdutoItemStateChanged

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed

    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnAdicionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdicionarMouseClicked
        //Para adicionar as vendas na tabela

        if (txtQuantidade.getText().equals("0")
                || txtQuantidade.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null,
                    "O campo Quantidade não pode receber zero '0' e não pode ficar vazio!");
        
        } else {
            DefaultTableModel model = (DefaultTableModel) tabelaVendas.getModel();

            ProdutoDTO produto = PesquisarProduto.stream()
                    .filter(p -> String.valueOf(cbxProduto.getSelectedItem())
                            .equalsIgnoreCase(p.getProduto()))
                    .findFirst()
                    .orElse(null);

            int quantidade = Integer.valueOf(txtQuantidade.getText());

            if (controllerProduto.podeVenderProduto(produto.getId(), quantidade)) {
                model.addRow(new Object[]{
                    String.valueOf(cbxNomeCliente.getSelectedItem()),
                    String.valueOf(cbxProduto.getSelectedItem()),
                    quantidade,
                    String.valueOf(cbxFormaPagamento.getSelectedItem()),
                    produto.getValorvenda(),
                    calcularValorComDesconto(),
                });
                SomarValorTotalApagar();
                LimparCamposVenda();
            } else {
                JOptionPane.showMessageDialog(
                        this,
                        "Quantidade indisponível!",
                        "Atenção",
                        JOptionPane.WARNING_MESSAGE);
            }

        /*    
        } else { 
            DefaultTableModel model = (DefaultTableModel) tabelaVendas.getModel();
            ProdutoDTO produto = PesquisarProduto.stream()
                      .filter(p -> p.getProduto()
                              .equalsIgnoreCase(String.valueOf(cbxProduto.getSelectedItem())))
                      .findFirst()
                      .orElse(null);
            
            int quantidade = Integer.valueOf(txtQuantidade.getText());
                        
            if (controllerProduto.podeVenderProduto(produto.getId(), quantidade)) {
                model.addRow(new Object[]{
                        String.valueOf(cbxNomeCliente.getSelectedItem()),
                        String.valueOf(cbxProduto.getSelectedItem()),
                        quantidade,
                        String.valueOf(cbxFormaPagamento.getSelectedItem()),
                        produto.getValorvenda(),
                        calcularValorComDesconto()                    
                ,});
                SomarValorTotalApagar();
                LimparCamposVenda();
            } else {
                JOptionPane.showMessageDialog(
                    this, 
                    "Quantidade indisponível!", 
                    "Atenção", 
                    JOptionPane.WARNING_MESSAGE);
           }
      */       
        }

    }//GEN-LAST:event_btnAdicionarMouseClicked

    private void txtQuantidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantidadeKeyReleased
        txtValorTotal.setText(String.valueOf(calcularValorTotal()));
    }//GEN-LAST:event_txtQuantidadeKeyReleased

    private void txtDescontoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescontoKeyReleased
        txtValorTotal.setText(String.valueOf(calcularValorComDesconto()));
    }//GEN-LAST:event_txtDescontoKeyReleased

    private void btnFinalizarVendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFinalizarVendaMouseClicked

// para salvar no banco de dados
        if (tabelaVendas.getRowCount() > 0) {
            Object[] columnData = new Object[tabelaVendas.getRowCount()];
            Object[] rowData = new Object[tabelaVendas.getRowCount()];

            List<VendasDTO> vendas = new ArrayList<>();

            for (int i = 0; i < tabelaVendas.getRowCount(); i++) {
                VendasDTO venda = new VendasDTO();
                //ProdutoDTO produto = new ProdutoDTO();
                // FornecedorDTO fornecedor = new FornecedorDTO();
                ClienteDTO cliente = getClienteSelecionado(tabelaVendas.getValueAt(i, 0).toString());
                ProdutoDTO produto = getProdutoSelecionado(tabelaVendas.getValueAt(i, 1).toString());
                venda.setCodigocliente(cliente.getIdcliente());
                venda.setCodigoProduto(produto.getId());
                venda.setQuantidade(Integer.parseInt(tabelaVendas.getValueAt(i, 2).toString()));
                //  venda.setVendasDesconto(Double.parseDouble(tabelaVendas.getValueAt(i, 4).toString()));
                venda.setValorLiquido(Double.parseDouble(tabelaVendas.getValueAt(i, 4).toString()));
                // venda.setValortotalapagar(Double.parseDouble(tabelaVendas.getValueAt(i, 5).toString()));
                venda.setFormapagamento(tabelaVendas.getValueAt(i, 3).toString());
                vendas.add(venda);
            }
            vendasController.salvar(vendas);
            JOptionPane.showMessageDialog(
                    this,
                    "Venda Cadastrada com sucesso!",
                    "Atenção",
                    JOptionPane.WARNING_MESSAGE);
        }

        LimparCamposFinalizar();
        /*
        for (int i = 0; i < tabelaVendas.getRowCount(); i++) {
                VendasDTO venda = new VendasDTO();
               //produtodto = new ProdutoDTO();
                ClienteDTO cliente = getClienteSelecionado(tabelaVendas.getValueAt(i, 0).toString());
                ProdutoDTO produto = getProdutoSelecionado(tabelaVendas.getValueAt(i, 1).toString());
                venda.setCodigocliente(cliente.getIdcliente());
              //venda.setCodigofornecedor(produto.getFornecedordto().getId_fornecedor());
                venda.setQuantidade(Integer.parseInt(tabelaVendas.getValueAt(i, 2).toString()));
              //venda.setVendasDesconto(Integer.parseInt(tabelaVendas.getValueAt(i, 4).toString()));
                venda.setValorLiquido(Double.parseDouble(tabelaVendas.getValueAt(i, 5).toString()));
                //venda.setValortotalapagar(Double.parseDouble(tabelaVendas.getValueAt(i, 5).toString()));
                venda.setFormapagamento(tabelaVendas.getValueAt(i, 3).toString());
                vendas.add(venda);
            }            
            vendasController.salvar(vendas);      
            JOptionPane.showMessageDialog(
                    this, 
                    "Venda Cadastrada com sucesso!", 
                    "Atenção", 
                    JOptionPane.WARNING_MESSAGE);
        }                 
         */
 /*
        //novo codigo para cadastrar
        vendasdto.setCodigocliente(Integer.parseInt(txtCodigoCliente.getText()));
        if (tabelaVendas.getRowCount() > 0) {
          Object[] columnData = new Object[tabelaVendas.getRowCount()];
          Object[] rowData = new Object[tabelaVendas.getRowCount()];
        }
        vendasdto.setValorLiquido(Double.parseDouble(txtValorTotal.getText()));
         */

    }//GEN-LAST:event_btnFinalizarVendaMouseClicked

    private void txtTotalApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalApagarActionPerformed

    }//GEN-LAST:event_txtTotalApagarActionPerformed

    private void txtTotalApagarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalApagarKeyReleased

    }//GEN-LAST:event_txtTotalApagarKeyReleased

    private void txtValorTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorTotalActionPerformed

    private void btnCancelarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarProdutoActionPerformed
        // REMOVER O PRODUTO DA LINHA SELECIONADA
        int linha = tabelaVendas.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tabelaVendas.getModel();
        model.removeRow(linha);
        SomarValorTotalApagar();
    }//GEN-LAST:event_btnCancelarProdutoActionPerformed

    private void cbxProdutoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cbxProdutoAncestorAdded
        // TODO add your handling code here:
        /* 
        FornecedorDAO dao = new FornecedorDAO();
        List<FornecedorDTO> lista = dao.PesquisarFornecedor();

        cbxProduto.removeAll();

        for (FornecedorDTO forn : lista) {
            cbxProduto.addItem(forn.getProduto_fornecedor());
        }
         */
    }//GEN-LAST:event_cbxProdutoAncestorAdded

    private void txtCodigoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoProdutoActionPerformed

    private void cbxFormaPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxFormaPagamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxFormaPagamentoActionPerformed

    private void txtValorTotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorTotalFocusLost
        // TODO add your handling code here:
//        produtodto = controllerProduto.pesquisarProdutoValorCompra((txtValorTotal.getText()));
//        cbxProduto.setSelectedItem(produtodto.getValorcompra());

    }//GEN-LAST:event_txtValorTotalFocusLost

    private void cbxProdutoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbxProdutoPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxProdutoPopupMenuWillBecomeInvisible

    private double calcularValorTotal() {
        ProdutoDTO produto = getProdutoSelecionado();
        int quantidade = Integer.parseInt(txtQuantidade.getText().isEmpty() ? "0" : txtQuantidade.getText());
        return quantidade * Double.valueOf(produto.getValorvenda().replace(',', '.'));
    }

    /*
    private double calcularValorTotal() {
        ProdutoDTO produto = getProdutoSelecionado();
        int quantidade = Integer.parseInt(txtQuantidade.getText().isEmpty() ? "0" : txtQuantidade.getText());
        return quantidade * Double.valueOf(produto.getValorvenda().replace(',', '.'));
    }
     */
    private ProdutoDTO getProdutoSelecionado() {
        return PesquisarProduto.stream()
                .filter(p -> String.valueOf(cbxProduto.getSelectedItem())
                        .equalsIgnoreCase(p.getProduto()))
                .findFirst()
                .orElse(null);
    }

    private ProdutoDTO getProdutoSelecionado(String produto) {
        return PesquisarProduto.stream()
                .filter(p -> produto.equalsIgnoreCase(p.getProduto()))
                .findFirst()
                .orElse(null);
    }

    private double calcularValorComDesconto() {
        double desconto = Double.parseDouble(txtDesconto.getText().isEmpty() ? "0" : txtDesconto.getText().replace(",", "."));
        return calcularValorTotal() - desconto;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaVenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnCancelarProduto;
    private javax.swing.JButton btnFinalizarVenda;
    private javax.swing.JButton btnSair;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbxFormaPagamento;
    private javax.swing.JComboBox<String> cbxNomeCliente;
    private javax.swing.JComboBox<String> cbxProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tabelaVendas;
    private javax.swing.JTextField txtCodigoCliente;
    private javax.swing.JTextField txtCodigoProduto;
    private javax.swing.JTextField txtDesconto;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtTotalApagar;
    private javax.swing.JTextField txtValorTotal;
    // End of variables declaration//GEN-END:variables

    //PESQUISA OS PRODUTOS NO Cbox BOX PRODUTOS 
    private void listarClientes() {
        PesquisarCliente = controllerCliente.ControllerPesquisarCliente();
        cbxNomeCliente.removeAllItems();
        for (int i = 0; i < PesquisarCliente.size(); i++) {
            cbxNomeCliente.addItem(PesquisarCliente.get(i).getNome());
        }
    }
//PESQUISA OS PRODUTOS NO CBX BOX PRODUTOS 

    private void listarProdutos() {
        PesquisarProduto = controllerProduto.ListaProdutosController();
        cbxProduto.removeAllItems();
        for (int i = 0; i < PesquisarProduto.size(); i++) {
            cbxProduto.addItem(PesquisarProduto.get(i).getProduto());
        }
    }

    private void carregarVendas() {

        DefaultTableModel model = (DefaultTableModel) tabelaVendas.getModel();
        listadtovendascliente = controllerVendasCliente.getListaCliente();
        int cont = listadtovendascliente.size();
        for (int i = 0; i < cont; i++) {
            model.addRow(new Object[]{
                listadtovendascliente.get(i).getVendasdto().getIdvendas(),
                listadtovendascliente.get(i).getClientedto().getNome(),
                listadtovendascliente.get(i).getVendasdto().getDatavenda()});

        }
    }

    private void SomarValorTotalApagar() {
        double soma = 0, valor;
        int cont = tabelaVendas.getRowCount();
        for (int i = 0; i < cont; i++) {
            valor = (double) tabelaVendas.getValueAt(i, 5);
            soma = soma + valor;
        }
        txtTotalApagar.setText(String.valueOf(soma));
    }

    private void LimparCamposVenda() {
        txtQuantidade.setText("");
        txtDesconto.setText("");
        txtValorTotal.setText("");
        txtCodigoCliente.setText("");
        txtCodigoProduto.setText("");
        cbxNomeCliente.setSelectedIndex(-1);
        cbxProduto.setSelectedIndex(-1);
    }

    private void LimparCamposFinalizar() {
        txtQuantidade.setText("");
        txtDesconto.setText("");
        txtValorTotal.setText("");
        txtCodigoCliente.setText("");
        txtCodigoProduto.setText("");
        txtTotalApagar.setText("");
        ((DefaultTableModel) tabelaVendas.getModel()).setRowCount(0);

    }
    /*
 private void SalvarVendasProduto(){
      int codigoVenda = 0;
        listaVendasProdutosdto = new ArrayList<>();
        vendasdto.setCodigocliente(Integer.parseInt(txtCodigoCliente.getText()));
        vendasdto.setValorLiquido(Double.parseDouble(txtValorTotal.getText()));
        vendasdto.setValorBruto(Double.parseDouble(txtValorTotal.getText()));
        vendasdto.setVendasDesconto(Double.parseDouble(txtDesconto.getText()));
       // codigoVenda = vendasController.salvar();
       //listaVendasProdutosdto = new ArrayList<>();
       //controllerVendasProduto.salvarVendasProdutosController(listaVendasProdutosdto);
 }
     */

}
